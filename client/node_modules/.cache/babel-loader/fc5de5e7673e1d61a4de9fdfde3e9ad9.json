{"ast":null,"code":"var _jsxFileName = \"/Users/riyadh/Desktop/shopping-cart/e-cart-old-copy/src/component/backDash/DashCart.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { DataContext } from \"../context\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Colors from \"../section/colors\";\nimport \"../css/Details.css\";\nimport \"../css/Cart.css\";\nimport { toast } from \"react-toastify\";\nimport Header from \"../header\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport StripeCheckout from \"react-stripe-checkout\";\ntoast.configure();\n\nconst DashCart = () => {\n  const {\n    products,\n    cart,\n    handleIncrement,\n    handleDecrement,\n    handleRemove,\n    total,\n    handleTotal,\n    removeAll\n  } = useContext(DataContext);\n\n  const handleToken = token => {\n    const body = {\n      token,\n      products,\n      total\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(`http://localhost:5000/payment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    }).then(response => {\n      toast(\" Success! Check email for details\", {\n        type: \"success\"\n      });\n      removeAll();\n      console.log(response);\n    }).catch(() => {\n      toast(\"Something went wrong\", {\n        type: \"error\"\n      });\n    });\n  }; //Pay With Card HandleToken\n  //Added to Total in the cart\n\n\n  useEffect(() => {\n    handleTotal();\n  }, []); //Without product showing empty cart\n\n  if (cart.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Your Cart is Currently Empty\"), \" \");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, \"Hello\");\n  }\n};\n\nexport default DashCart;","map":{"version":3,"sources":["/Users/riyadh/Desktop/shopping-cart/e-cart-old-copy/src/component/backDash/DashCart.jsx"],"names":["React","useContext","useEffect","useState","DataContext","Link","BrowserRouter","Router","Colors","toast","Header","StripeCheckout","configure","DashCart","products","cart","handleIncrement","handleDecrement","handleRemove","total","handleTotal","removeAll","handleToken","token","body","headers","fetch","method","JSON","stringify","then","response","type","console","log","catch","length","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,oBAAP;AACA,OAAO,iBAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,uCAAP;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACAF,KAAK,CAACG,SAAN;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA;AARI,MASFpB,UAAU,CAACG,WAAD,CATd;;AAWA,QAAMkB,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAMC,IAAI,GAAG;AACXD,MAAAA,KADW;AAEXT,MAAAA,QAFW;AAGXK,MAAAA;AAHW,KAAb;AAMA,UAAMM,OAAO,GAAG;AACd,sBAAgB;AADF,KAAhB;AAGA,WAAOC,KAAK,CAAE,+BAAF,EAAkC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CF,MAAAA,OAF4C;AAG5CD,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHsC,KAAlC,CAAL,CAKJM,IALI,CAKEC,QAAD,IAAc;AAClBtB,MAAAA,KAAK,CAAC,mCAAD,EAAsC;AAAEuB,QAAAA,IAAI,EAAE;AAAR,OAAtC,CAAL;AAEAX,MAAAA,SAAS;AAETY,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,KAXI,EAYJI,KAZI,CAYE,MAAM;AACX1B,MAAAA,KAAK,CAAC,sBAAD,EAAyB;AAAEuB,QAAAA,IAAI,EAAE;AAAR,OAAzB,CAAL;AACD,KAdI,CAAP;AAeD,GAzBD,CAZqB,CAuCrB;AAEA;;;AACA9B,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT,CA1CqB,CA8CrB;;AACA,MAAIL,IAAI,CAACqB,MAAL,KAAgB,CAApB,EAAuB;AACrB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EACwE,GADxE,CADF;AAKD,GAND,MAMO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AA4DD;AACF,CAnHD;;AAqHA,eAAexB,QAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { DataContext } from \"../context\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Colors from \"../section/colors\";\nimport \"../css/Details.css\";\nimport \"../css/Cart.css\";\nimport { toast } from \"react-toastify\";\nimport Header from \"../header\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport StripeCheckout from \"react-stripe-checkout\";\ntoast.configure();\n\nconst DashCart = () => {\n  const {\n    products,\n    cart,\n    handleIncrement,\n    handleDecrement,\n    handleRemove,\n    total,\n    handleTotal,\n    removeAll,\n  } = useContext(DataContext);\n\n  const handleToken = (token) => {\n    const body = {\n      token,\n      products,\n      total,\n    };\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n    return fetch(`http://localhost:5000/payment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        toast(\" Success! Check email for details\", { type: \"success\" });\n\n        removeAll();\n\n        console.log(response);\n      })\n      .catch(() => {\n        toast(\"Something went wrong\", { type: \"error\" });\n      });\n  };\n\n  //Pay With Card HandleToken\n\n  //Added to Total in the cart\n  useEffect(() => {\n    handleTotal();\n  }, []);\n\n  //Without product showing empty cart\n  if (cart.length === 0) {\n    return (\n      <div>\n        <h2 style={{ textAlign: \"center\" }}>Your Cart is Currently Empty</h2>{\" \"}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        Hello\n        {/* {cart.map((item) => (\n          <div className=\"details cart\" key={item._id}>\n            <img className=\"cart-img\" src={item.src} alt=\"\" />\n            <div className=\"box\">\n              <div className=\"row\">\n                <h2>{item.title}</h2>\n                <span>£{item.price * item.count}</span>\n              </div>\n\n              <Colors colors={item} />\n\n              <p>{item.description}</p>\n              <p>{item.content}</p>\n              <div className=\"amount\">\n                <button\n                  className=\"count\"\n                  onClick={() => handleDecrement(item._id)}\n                >\n                  -\n                </button>\n                <span>{item.count}</span>\n                <button\n                  className=\"count\"\n                  onClick={() => handleIncrement(item._id)}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n\n            <div className=\"delete\" onClick={() => handleRemove(item._id)}>\n              Remove\n            </div>\n          </div>\n        ))}\n        <div className=\"total-checkout\">\n          <h3>Total: £{total}</h3>\n        </div>\n\n        <div className=\"total\">\n          <div className=\"total\">\n            <Link to=\"/product\" style={{ background: \"crimson\" }}>\n              Continue Shopping\n            </Link>\n          </div>\n          <StripeCheckout\n            stripeKey=\"pk_test_51HAlmnIfOyLdLwzAz2piAWlcCJcAPATSEkCyxcUG7m1F80xXqr4wd8FoFWqYEfXUUEEgDGBx5G9aXG4IenAw46fh00x1Qgnr7v\"\n            token={handleToken}\n            name=\"NIKE\"\n            billingAddress\n            shippingAddress\n          >\n            <button className=\"btn btn-primary btn-lg\">Checkout</button>\n          </StripeCheckout>\n        </div> */}\n      </div>\n    );\n  }\n};\n\nexport default DashCart;\n"]},"metadata":{},"sourceType":"module"}